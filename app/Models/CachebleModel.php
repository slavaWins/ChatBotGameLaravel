<?php

namespace App\Models;

use App\Characters\PlayerCharacter;
use App\Models\Bot\Character;
use App\Models\Bot\Scene;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Cache;
use Laravel\Sanctum\HasApiTokens;
use Rennokki\QueryCache\Traits\QueryCacheable;
use Spatie\Permission\Traits\HasRoles;


class CachebleModel extends Model
{

    /**
     * Время на которое кэшируются данные
     * @var int
     */
    public $CACHE_TIME = 10;

    public function find($id)
    {
        $data = cache()->get(self::CacheKeyById($id));
        if ($data) {

            $cl = get_called_class();
            $model = new $cl();
            foreach ($data as $K => $V) {
                $model->$K = $V;
            }
            $model->exist = true;
            return $model;
        }

        $model = parent::find($id);
        $model->CacheSave();

        return $model;
    }

    public static function CacheKeyById($id)
    {
        return basename(get_called_class()) . $id;
    }

    function CacheKey()
    {
        return self::CacheKeyById($this->id);
    }

    function CacheClear()
    {
        cache()->delete($this->CacheKey());
    }

    function CacheSave()
    {

        $data = $this->toArray();

        foreach ($this->relations as $K => $V) {
            if (isset($data[$K])) {
                unset($data[$K]);
            }
        }

        Cache::put($this->CacheKey(), $data, $seconds = $this->CACHE_TIME);
    }

    function save(array $options = [])
    {

        $this->CacheClear();
        parent::save($options); // TODO: Change the autogenerated stub
    }

}
